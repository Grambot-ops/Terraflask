# Docker/nginx/nginx.conf

# Global directives
worker_processes auto; # Automatically set based on CPU cores
pid /run/nginx.pid;    # Default PID file location

# Events context
events {
    worker_connections 768; # Default value, adjust if needed
    # multi_accept on; # Uncomment for higher concurrency potential
}

# HTTP context - THIS IS WHERE UPSTREAM AND SERVER GO
http {
    # Define the upstream server group (your Flask app)
    upstream flask_app {
        # 'application' is the service name defined in docker-compose.yaml
        # 5000 is the port Gunicorn listens on inside the 'application' container
        server application:5000;
    }

    # Basic HTTP settings
    sendfile on;           # Enable efficient file transfer
    tcp_nopush on;         # Optimize packet sending
    tcp_nodelay on;        # Reduce latency for small packets
    keepalive_timeout 65;  # Keep connections open for a bit
    types_hash_max_size 2048; # Increase hash size for MIME types

    # Include standard MIME types
    include /etc/nginx/mime.types;
    # Default MIME type if none match
    default_type application/octet-stream;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Optional: Gzip compression settings
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Define the main server block to handle incoming requests
    server {
        listen 80; # Listen on port 80 for IPv4
        # The default Nginx image entrypoint often adds IPv6 listening automatically
        # listen [::]:80; # Uncomment if needed explicitly

        server_name _; # Listen for any hostname

        # Root location block - passes requests to the Flask app
        location / {
            # Pass requests to the upstream defined above
            proxy_pass http://flask_app;

            # Set headers to pass necessary info to the Flask app
            proxy_set_header Host $host; # Pass the original host header
            proxy_set_header X-Real-IP $remote_addr; # Pass the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Append client IP list
            proxy_set_header X-Forwarded-Proto $scheme; # Pass the original protocol (http/https)

            # Optional: Adjust proxy timeouts if needed for long-running requests
            # proxy_connect_timeout       600;
            # proxy_send_timeout          600;
            # proxy_read_timeout          600;
            # send_timeout                600;
        }

        # Optional: Serve static files directly via Nginx for better performance
        # location /static {
        #     alias /app/static; # Adjust path if your static files are elsewhere IN THE FLASK CONTAINER
        #     expires 30d;      # Cache static files in browser
        #     add_header Cache-Control public;
        # }

        # Optional: Define custom error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            # Use Nginx's default error page location
            root /usr/share/nginx/html;
        }
    }

    # By providing the full http block, we prevent default Nginx includes
    # like /etc/nginx/conf.d/*.conf or /etc/nginx/sites-enabled/* unless added explicitly.
}